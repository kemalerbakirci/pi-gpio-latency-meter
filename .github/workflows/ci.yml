name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        flake8 latency_meter.py sim_backend.py plot.py tests/ --max-line-length=100

    - name: Check formatting with black
      run: |
        black --check --diff latency_meter.py sim_backend.py plot.py tests/

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff latency_meter.py sim_backend.py plot.py tests/

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Test simulator functionality
      run: |
        python latency_meter.py --backend sim --seconds 5 --csv test_results.csv
        python plot.py --csv test_results.csv --output test_plot.png

    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test_results.csv
          test_plot.png

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip build

    - name: Build package
      run: |
        python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
